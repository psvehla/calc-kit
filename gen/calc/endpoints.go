// Code generated by goa v3.7.3, DO NOT EDIT.
//
// calc endpoints
//
// Command:
// $ goa gen calc-kit/design

package calc

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Endpoints wraps the "calc" service endpoints.
type Endpoints struct {
	Multiply endpoint.Endpoint
}

// NewEndpoints wraps the methods of the "calc" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Multiply: NewMultiplyEndpoint(s),
	}
}

// Use applies the given middleware to all the "calc" service endpoints.
func (e *Endpoints) Use(m func(endpoint.Endpoint) endpoint.Endpoint) {
	e.Multiply = m(e.Multiply)
}

// NewMultiplyEndpoint returns an endpoint function that calls the method
// "multiply" of service "calc".
func NewMultiplyEndpoint(s Service) endpoint.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*MultiplyPayload)
		return s.Multiply(ctx, p)
	}
}
